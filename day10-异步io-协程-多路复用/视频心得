1.io操作不占用cpu, 计算占用cpu.
2.python多线程不适合cpu密集操作型的任务, 适合io操作密集型的任务
3.python进程之间相互独立(内存),实际上仍归操作系统管理,所以没有GIL全局锁.而且多进程不会共同访问到同一份资源,所以也不需加锁
4.两个进程想通信需要找一个中间件.
5.进程池限制同一时间运行的进程数. 
6.协程是一种用户态的轻量级线程.(用户自己控制的,cpu不认识协程)
7.进程->线程->协程.
8.协程碰到异步IO操作就能进行切换了.
9.greenlet封装好的协程.
10.Gevent 是一个第三方库，可以轻松通过gevent实现并发同步或异步编程，在gevent中用到的主要模式是Greenlet, 它是以C扩展模块形式接入Python的轻量级协程。 Greenlet全部运行在主程序操作系统进程的内部，但它们被协作式地调度.
11.主流的网络服务模型就是事件驱动的模式.
12.io操作是操作系统执行的.
13.epoll监控多个socket链接.
